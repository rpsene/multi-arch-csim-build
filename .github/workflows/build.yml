# This is a basic workflow to help you get started with Actions

name: CI

on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-22.04
    name: Build on ubuntu-22.04 armv7
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu22.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ secrets.GITHUBTOKEN }}

          # The shell to run commands with in the container
          shell: /bin/sh

          setup: |
            mkdir -p "${PWD}/artifacts"

          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          install: |
            apt-get update -y && \
            DEBIAN_FRONTEND="noninteractive" apt-get install -y \
            git \
            opam \
            build-essential \
            device-tree-compiler \
            libgmp-dev \
            z3 \
            pkg-config \
            zlib1g-dev && \
            opam init --disable-sandboxing --auto-setup && \
            eval $(opam env) && \
            opam repository add rems https://github.com/rems-project/opam-repository.git && \
            opam install -y sail

          run: |
            git clone https://github.com/rpsene/sail-riscv && cd ./sail-riscv && \
            eval $(opam env) && sail && ARCH=RV32 ENABLE_STATIC=1 make csim && ARCH=RV64 ENABLE_STATIC=1 make csim && \
            ls ./c_emulator/ && \
            cp ./c_emulator/riscv_sim_RV32 ../artifacts/riscv_sim_RV32_armv7 && \
            cp ./c_emulator/riscv_sim_RV64 ../artifacts/riscv_sim_RV64_armv7

      - name: Show the artifact
        run: |
          ls -al "${PWD}/artifacts"
